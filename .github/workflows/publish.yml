name: Publish RPM

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  linux:
    # The host should always be linux
    runs-on: ubuntu-latest
    name: Building RPMs on ${{ matrix.distro }}
    strategy:
      fail-fast: false
      matrix:
        distro:
          - 'centos:7'
          - 'fedora:39'
          - 'fedora:40'
        include:
          - distro: 'fedora:40'
            pre: >-
              dnf install -y hostname &&
              dnf install -y nmap ShellCheck curl sudo make bzip2 rpm-build openssh-clients
          - distro: 'fedora:39'
            pre: >-
              dnf install -y hostname &&
              dnf install -y nmap ShellCheck curl sudo make bzip2 rpm-build openssh-clients
          - distro: 'centos:7'
            pre: >-
              yum install -y nmap curl sudo make bzip2 rpm-build openssh-clients &&
              scversion="stable"; curl -Ls "https://github.com/koalaman/shellcheck/releases/download/${scversion?}/shellcheck-${scversion?}.linux.x86_64.tar.xz" | tar -xJv && cp "shellcheck-${scversion}/shellcheck" /usr/bin/
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build the RPM on ${{ matrix.distro }}
        env:
          PRE: ${{ matrix.pre }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo $PRE > ./prep-cmd.sh
          echo "${SSH_PRIVATE_KEY}" > id_rsa
          docker run --network host -w /check_letsdebug -v ${PWD}:/check_letsdebug ${{ matrix.distro }} \
              /bin/sh -c 'sh ./prep-cmd.sh \
              && uname -a \
              && whoami \
              && pwd \
              && . ./prepare_rpm.sh \
              && echo "$RPM  --> $RPMDIR" \
              && echo "$SRPM --> $SRPMDIR" \
              && mkdir /root/.ssh \
              && chmod 700 /root/.ssh \
              && cp id_rsa /root/.ssh \
              && chmod 600 /root/.ssh/id_rsa \
              && scp -oStrictHostKeyChecking=no $RPM  github@rpm.corti.li:$RPMDIR \
              && scp -oStrictHostKeyChecking=no $SRPM github@rpm.corti.li:$SRPMDIR \
              && echo "Updating /var/www/rpm/$DIST/$RELEASE" \
              && ssh -oStrictHostKeyChecking=no github@rpm.corti.li "createrepo /var/www/rpm/$DIST/$RELEASE" '
